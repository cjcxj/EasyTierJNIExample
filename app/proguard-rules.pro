# ===================================================================
# ProGuard/R8 Rules for EasyTier App - Final Version
# ===================================================================

# --- General ---
-keepattributes *Annotation*
-dontwarn okio.**
-dontwarn com.squareup.wire.**

# --- Keep Entry Points ---
# Keep your main activity and application class
-keep public class com.easytier.app.MainActivity { *; }
-keep public class * extends android.app.Application

# --- Compose Rules ---
-keep class androidx.compose.runtime.snapshots.SnapshotKt { *; }
-keepclassmembers class * {
    @androidx.compose.runtime.Composable <methods>;
}
-keep class * implements androidx.compose.runtime.Composer {
  <init>(...);
}

# --- Moshi Rules ---
# Keep data classes for serialization.
# Using @Keep annotation is the most robust way.
-keep @androidx.annotation.Keep class * {*;}
-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
    @androidx.annotation.Keep <methods>;
}
# Fallback for Moshi annotations
-keep @com.squareup.moshi.Json class *
-keepclasseswithmembers class * {
    @com.squareup.moshi.Json <methods>;
}
# Keep our manually written ConfigData class explicitly.
-keep class com.easytier.app.ConfigData { *; }


# --- Wire Rules (CRITICAL - ENHANCED) ---
# Keep Wire's internal infrastructure.
-keep class com.squareup.wire.ProtoAdapter { *; }
-keep class com.squareup.wire.FieldEncoding { *; }
-keep class com.squareup.wire.Message$Builder { *; }

# Forcefully keep ALL classes generated by Wire, including ALL their members.
# This is a stronger rule than just keeping the class.
# It explicitly tells R8 to keep all methods, fields, and constructors.
-keep public class * extends com.squareup.wire.Message {
    <fields>;
    <methods>;
}


# --- JNI Rules ---
-keepclasseswithmembers class * {
    native <methods>;
}
-keep class com.easytier.jni.EasyTierJNI { *; }

# --- EasyTierManager Rules ---
# Keep EasyTierManager class and its members, especially public methods and data classes.
-keep class com.easytier.jni.EasyTierManager { *; }
-keep class com.easytier.jni.EasyTierManager$EasyTierStatus { *; }

# --- EasyTierVpnService Rules ---
# Keep EasyTierVpnService class and its members.
-keep class com.easytier.jni.EasyTierVpnService { *; }

# --- NetworkInfoParser and Data Models Rules ---
# Keep NetworkInfoParser object and all its associated data classes.
-keep class com.easytier.jni.NetworkInfoParser { *; }
-keep class com.easytier.jni.DetailedNetworkInfo { *; }
-keep class com.easytier.jni.MyNodeInfo { *; }
-keep class com.easytier.jni.EventInfo { *; }
-keep class com.easytier.jni.EventInfo$Level { *; }
-keep class com.easytier.jni.RouteData { *; }
-keep class com.easytier.jni.PeerConnectionData { *; }
-keep class com.easytier.jni.FinalPeerInfo { *; }

# Keep top-level function parseIpv4InetToString from EasyTierManager.kt
-keep class com.easytier.jni.EasyTierManagerKt { java.lang.String parseIpv4InetToString(common.Ipv4Inet); }